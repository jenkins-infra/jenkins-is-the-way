map:
  authored_by: Gaurav Agarwal
  location: United Kingdom
  industries:
    - Logistics
  geojson: '{"type":"Point","coordinates":[0.06976349999999999,51.55818799999999]}'
metadata:
  title: This logistics company wanted to seamlessly enable DevOps within the organization. That's when they decided to move Jenkins to the cloud and shift it to a Kubernetes cluster. Now their builds are 10X faster. And they are experiencing no performance bottlenecks.
  organization: Development project for a UK-based logistics company
  programming_languages:
    - Java
    - PHP
  platforms:
    - ': Kubernetes'
    - Linux
  version_control_systems:
    - Bitbucket Server
  build_tools:
    - Maven
  community_supports:
    - Relied on Jenkins Users Google Group or IRC Chat
    - Jenkins.io websites & blogs
body_content:
  title: Building a DevOps platform with near infinite scaling capacity.
  paragraphs:
    - '**Background:** We started using Jenkins standalone, and it worked perfectly fine for six months. But with more and more teams using the tool and an increasing load, we naturally hit the performance overhead.'
    - Since we didn't have Kubernetes then, the only options we had were to either opt for a master-agent configuration through servers or scale the server vertically by adding more CPU and memory. We chose the latter as it was quicker and more comfortable for us. However, we realized this wasn't going to last long, and started looking for alternative options. Eventually, the CTO of the company decided to go ahead with a cloud strategy. That was good for us.
    - '**Goals:** Our ultimate goal was to seamlessly enable DevOps within the organization. Therefore, we decided to move our Jenkins to the cloud and shift it to a Kubernetes cluster we had built and had migrated all tools to.'
    - '**Solution & Results:** We had two options: either containerise the master and use it standalone or build a scalable Jenkins by using Kubernetes. We came up with the following architecture: One replica of Jenkins master runs as a control plane. All users log in to the master to build and manage their jobs. Using the Jenkins Kubernetes plugin, we then employ Kubernetes to spin up additional Jenkins agent containers when someone triggers a build. It runs the job in the container and, when successful, removes the container.'
    - Jenkins allowed us to run builds in a scalable fashion and more or less independent way. This allowed multiple builds to run in parallel with a near infinite scaling capacity. It also helped us optimise cost due to the elasticity of the Kubernetes Infrastructure and Google Cloud platform in general. The results?
    - |-
      *   builds are 10X faster
      *   cost reduction as Jenkins uses the same Kubernetes cluster
      *   faster time to delivery because of no performance bottlenecks
    - '***[Click here to read the full story.](https://medium.com/better-programming/how-we-scaled-jenkins-in-less-than-a-day-ccbcada8e4a4)***'
title: Jenkins is the way to accelerate automation in the cloud
date: 2020-04-16T17:47:48.000Z
authored_by: Gaurav Agarwal
post_name: to-accelerate-automation-in-the-cloud
quotes:
  - from: Gaurav Agarwal, Solution Architect
    content: Jenkins allowed us to run builds in a scalable fashion and a more or less independent way.
    image: ./quote.png
image: Agarawal-300x300.png
tag_line: Building a Scalable DevOps Platform
